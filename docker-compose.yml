services:
  postgres:
    image: postgres:15-alpine
    container_name: movie_service_postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=movie_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:alpine
    container_name: movie_service_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: movie_service_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - SECRET_KEY=your_secret_key_change_this_in_production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/movie_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: movie_service_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    command: npm run dev

volumes:
  redis_data:
  postgres_data: 